/* The following code was generated by JFlex 1.4.3 on 4/27/16 4:18 PM */

package org.mule.lang.dw.parser;
import com.intellij.lexer.*;
import com.intellij.psi.tree.IElementType;
import static org.mule.lang.dw.parser.psi.WeaveTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 4/27/16 4:18 PM from the specification file
 * <tt>/home/machaval/labs/repos/mule-intellij-plugin/mule-esb-plugin/src/main/java/org/mule/lang/dw/parser/_WeaveLexer.flex</tt>
 */
public class _WeaveLexer implements FlexLexer {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\16\1\2\1\1\1\0\1\2\1\1\16\16\4\0\1\2\1\71"+
    "\1\5\1\101\1\100\1\75\1\102\1\7\1\62\1\63\1\74\1\24"+
    "\1\66\1\12\1\3\1\4\1\25\11\21\1\11\1\0\1\67\1\72"+
    "\1\70\1\77\1\76\1\23\1\51\2\23\1\27\11\23\1\35\7\23"+
    "\1\54\3\23\1\30\1\6\1\31\1\103\1\17\1\0\1\33\1\36"+
    "\1\40\1\46\1\26\1\44\1\47\1\55\1\45\1\37\1\43\1\42"+
    "\1\32\1\15\1\50\1\34\1\10\1\14\1\53\1\41\1\13\1\57"+
    "\1\60\1\61\1\52\1\56\1\64\1\20\1\65\1\73\41\16\2\0"+
    "\4\16\4\0\1\22\2\0\1\16\7\0\1\22\4\0\1\22\5\0"+
    "\27\22\1\0\37\22\1\0\u01ca\22\4\0\14\22\16\0\5\22\7\0"+
    "\1\22\1\0\1\22\21\0\160\16\5\22\1\0\2\22\2\0\4\22"+
    "\10\0\1\22\1\0\3\22\1\0\1\22\1\0\24\22\1\0\123\22"+
    "\1\0\213\22\1\0\5\16\2\0\236\22\11\0\46\22\2\0\1\22"+
    "\7\0\47\22\7\0\1\16\1\0\55\16\1\0\1\16\1\0\2\16"+
    "\1\0\2\16\1\0\1\16\10\0\33\22\5\0\3\22\15\0\5\16"+
    "\6\0\1\16\4\0\13\16\5\0\53\22\37\16\4\0\2\22\1\16"+
    "\143\22\1\0\1\22\10\16\1\0\6\16\2\22\2\16\1\0\4\16"+
    "\2\22\12\16\3\22\2\0\1\22\17\0\1\16\1\22\1\16\36\22"+
    "\33\16\2\0\131\22\13\16\1\22\16\0\12\16\41\22\11\16\2\22"+
    "\4\0\1\22\5\0\26\22\4\16\1\22\11\16\1\22\3\16\1\22"+
    "\5\16\22\0\31\22\3\16\104\0\1\22\1\0\13\22\67\0\33\16"+
    "\1\0\4\16\66\22\3\16\1\22\22\16\1\22\7\16\12\22\2\16"+
    "\2\0\12\16\1\0\7\22\1\0\7\22\1\0\3\16\1\0\10\22"+
    "\2\0\2\22\2\0\26\22\1\0\7\22\1\0\1\22\3\0\4\22"+
    "\2\0\1\16\1\22\7\16\2\0\2\16\2\0\3\16\1\22\10\0"+
    "\1\16\4\0\2\22\1\0\3\22\2\16\2\0\12\16\2\22\2\16"+
    "\7\0\1\16\5\0\3\16\1\0\6\22\4\0\2\22\2\0\26\22"+
    "\1\0\7\22\1\0\2\22\1\0\2\22\1\0\2\22\2\0\1\16"+
    "\1\0\5\16\4\0\2\16\2\0\3\16\3\0\1\16\7\0\4\22"+
    "\1\0\1\22\7\0\14\16\3\22\1\16\13\0\3\16\1\0\11\22"+
    "\1\0\3\22\1\0\26\22\1\0\7\22\1\0\2\22\1\0\5\22"+
    "\2\0\1\16\1\22\10\16\1\0\3\16\1\0\3\16\2\0\1\22"+
    "\17\0\2\22\2\16\2\0\12\16\1\0\1\16\17\0\3\16\1\0"+
    "\10\22\2\0\2\22\2\0\26\22\1\0\7\22\1\0\2\22\1\0"+
    "\5\22\2\0\1\16\1\22\7\16\2\0\2\16\2\0\3\16\10\0"+
    "\2\16\4\0\2\22\1\0\3\22\2\16\2\0\12\16\1\0\1\22"+
    "\20\0\1\16\1\22\1\0\6\22\3\0\3\22\1\0\4\22\3\0"+
    "\2\22\1\0\1\22\1\0\2\22\3\0\2\22\3\0\3\22\3\0"+
    "\14\22\4\0\5\16\3\0\3\16\1\0\4\16\2\0\1\22\6\0"+
    "\1\16\16\0\12\16\11\0\1\16\7\0\3\16\1\0\10\22\1\0"+
    "\3\22\1\0\27\22\1\0\12\22\1\0\5\22\3\0\1\22\7\16"+
    "\1\0\3\16\1\0\4\16\7\0\2\16\1\0\2\22\6\0\2\22"+
    "\2\16\2\0\12\16\22\0\2\16\1\0\10\22\1\0\3\22\1\0"+
    "\27\22\1\0\12\22\1\0\5\22\2\0\1\16\1\22\7\16\1\0"+
    "\3\16\1\0\4\16\7\0\2\16\7\0\1\22\1\0\2\22\2\16"+
    "\2\0\12\16\1\0\2\22\17\0\2\16\1\0\10\22\1\0\3\22"+
    "\1\0\51\22\2\0\1\22\7\16\1\0\3\16\1\0\4\16\1\22"+
    "\10\0\1\16\10\0\2\22\2\16\2\0\12\16\12\0\6\22\2\0"+
    "\2\16\1\0\22\22\3\0\30\22\1\0\11\22\1\0\1\22\2\0"+
    "\7\22\3\0\1\16\4\0\6\16\1\0\1\16\1\0\10\16\22\0"+
    "\2\16\15\0\60\22\1\16\2\22\7\16\4\0\1\16\7\22\10\16"+
    "\1\0\12\16\47\0\2\22\1\0\1\22\2\0\2\22\1\0\1\22"+
    "\2\0\1\22\6\0\4\22\1\0\7\22\1\0\3\22\1\0\1\22"+
    "\1\0\1\22\2\0\2\22\1\0\4\22\1\16\2\22\6\16\1\0"+
    "\2\16\1\22\2\0\5\22\1\0\1\22\1\0\6\16\2\0\12\16"+
    "\2\0\4\22\40\0\1\22\27\0\2\16\6\0\12\16\13\0\1\16"+
    "\1\0\1\16\1\0\1\16\4\0\2\16\10\22\1\0\44\22\4\0"+
    "\24\16\1\0\2\16\5\22\13\16\1\0\44\16\11\0\1\16\71\0"+
    "\53\22\24\16\1\22\12\16\6\0\6\22\4\16\4\22\3\16\1\22"+
    "\3\16\2\22\7\16\3\22\4\16\15\22\14\16\1\22\17\16\2\0"+
    "\46\22\1\0\1\22\5\0\1\22\2\0\53\22\1\0\u014d\22\1\0"+
    "\4\22\2\0\7\22\1\0\1\22\1\0\4\22\2\0\51\22\1\0"+
    "\4\22\2\0\41\22\1\0\4\22\2\0\7\22\1\0\1\22\1\0"+
    "\4\22\2\0\17\22\1\0\71\22\1\0\4\22\2\0\103\22\2\0"+
    "\3\16\40\0\20\22\20\0\125\22\14\0\u026c\22\2\0\21\22\1\0"+
    "\32\22\5\0\113\22\3\0\3\16\17\0\15\22\1\0\4\22\3\16"+
    "\13\0\22\22\3\16\13\0\22\22\2\16\14\0\15\22\1\0\3\22"+
    "\1\0\2\16\14\0\64\22\40\16\3\0\1\22\3\0\1\16\1\22"+
    "\1\16\2\0\12\16\41\0\3\16\2\0\12\16\6\0\130\22\10\0"+
    "\51\22\1\16\1\22\5\0\106\22\12\0\35\22\3\0\14\16\4\0"+
    "\14\16\12\0\12\16\36\22\2\0\5\22\13\0\54\22\4\0\21\16"+
    "\7\22\2\16\6\0\12\16\46\0\27\22\5\16\4\0\65\22\12\16"+
    "\1\0\35\16\2\0\13\16\6\0\12\16\15\0\1\22\130\0\5\16"+
    "\57\22\21\16\7\22\4\0\12\16\21\0\11\16\14\0\3\16\36\22"+
    "\15\16\2\22\12\16\54\22\16\16\14\0\44\22\24\16\10\0\12\16"+
    "\3\0\3\22\12\16\44\22\122\0\3\16\1\0\25\16\4\22\1\16"+
    "\4\22\3\16\2\22\11\0\300\22\47\16\25\0\4\16\u0116\22\2\0"+
    "\6\22\2\0\46\22\2\0\6\22\2\0\10\22\1\0\1\22\1\0"+
    "\1\22\1\0\1\22\1\0\37\22\2\0\65\22\1\0\7\22\1\0"+
    "\1\22\3\0\3\22\1\0\7\22\3\0\4\22\2\0\6\22\4\0"+
    "\15\22\5\0\3\22\1\0\7\22\16\0\5\16\32\0\5\16\20\0"+
    "\2\16\23\0\1\16\13\0\5\16\5\0\6\16\1\0\1\22\15\0"+
    "\1\22\20\0\15\22\3\0\33\16\25\0\15\16\4\0\1\16\3\0"+
    "\14\16\21\0\1\22\4\0\1\22\2\0\12\22\1\0\1\22\3\0"+
    "\5\22\6\0\1\22\1\0\1\22\1\0\1\22\1\0\4\22\1\0"+
    "\13\22\2\0\4\22\5\0\5\22\4\0\1\22\21\0\43\16\2\22"+
    "\4\16\u0a77\0\57\22\1\0\57\22\1\0\205\22\6\0\4\22\3\16"+
    "\2\22\14\0\46\22\1\0\1\22\5\0\1\22\2\0\70\22\7\0"+
    "\1\22\17\0\1\16\27\22\11\0\7\22\1\0\7\22\1\0\7\22"+
    "\1\0\7\22\1\0\7\22\1\0\7\22\1\0\7\22\1\0\7\22"+
    "\1\0\40\16\57\0\1\22\u01d5\0\2\22\1\16\31\0\17\16\1\0"+
    "\5\22\2\0\3\16\2\22\4\0\126\22\2\0\2\16\2\0\3\22"+
    "\1\0\132\22\1\0\4\22\5\0\51\22\3\0\136\22\21\0\33\22"+
    "\65\0\20\22\u0200\0\u19b6\22\112\0\u51cd\22\63\0\u048d\22\103\0\56\22"+
    "\2\0\u010d\22\3\0\20\22\12\16\2\22\24\0\57\22\1\16\4\0"+
    "\12\16\1\0\31\22\7\0\1\16\106\22\14\16\45\0\11\22\2\0"+
    "\147\22\2\0\4\22\1\0\4\22\14\0\13\22\115\0\12\22\1\16"+
    "\3\22\1\16\4\22\1\16\27\22\5\16\20\0\1\16\7\0\64\22"+
    "\14\0\2\16\62\22\21\16\13\0\12\16\6\0\22\16\6\22\3\0"+
    "\1\22\4\0\12\16\34\22\10\16\2\0\27\22\15\16\14\0\35\22"+
    "\3\0\4\16\57\22\16\16\16\0\1\22\12\16\46\0\51\22\16\16"+
    "\11\0\3\22\1\16\10\22\2\16\2\0\12\16\6\0\27\22\3\0"+
    "\1\22\1\16\4\0\60\22\1\16\1\22\3\16\2\22\2\16\5\22"+
    "\2\16\1\22\1\16\1\22\30\0\3\22\2\0\13\22\5\16\2\0"+
    "\3\22\2\16\12\0\6\22\2\0\6\22\2\0\6\22\11\0\7\22"+
    "\1\0\7\22\221\0\43\22\10\16\1\0\2\16\2\0\12\16\6\0"+
    "\u2ba4\22\14\0\27\22\4\0\61\22\u2104\0\u016e\22\2\0\152\22\46\0"+
    "\7\22\14\0\5\22\5\0\1\22\1\16\12\22\1\0\15\22\1\0"+
    "\5\22\1\0\1\22\1\0\2\22\1\0\2\22\1\0\154\22\41\0"+
    "\u016b\22\22\0\100\22\2\0\66\22\50\0\14\22\1\16\3\0\20\16"+
    "\20\0\7\16\14\0\2\16\30\0\3\16\31\0\1\16\6\0\5\22"+
    "\1\0\207\22\2\0\1\16\4\0\1\16\13\0\12\16\7\0\32\22"+
    "\4\0\1\16\1\0\32\22\13\0\131\22\3\0\6\22\2\0\6\22"+
    "\2\0\6\22\2\0\3\22\3\0\2\16\3\0\2\16\22\0\3\16"+
    "\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\3\6\1\11\1\12\1\6\1\13\1\12\1\6"+
    "\1\14\1\15\21\6\1\16\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\1\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\0\1\37\1\0"+
    "\1\4\2\0\1\5\2\0\1\6\1\40\1\41\2\12"+
    "\1\42\7\6\1\0\1\43\2\44\1\41\1\0\1\6"+
    "\3\0\3\6\1\45\14\6\1\46\4\6\1\47\12\6"+
    "\1\50\1\51\1\52\1\53\1\54\1\55\1\56\7\0"+
    "\1\57\1\60\1\61\1\0\1\62\11\6\1\63\1\64"+
    "\1\44\1\6\1\0\1\65\1\6\1\66\26\6\1\41"+
    "\3\6\1\67\4\0\1\70\4\0\7\6\1\71\1\6"+
    "\1\0\10\6\1\72\3\6\1\65\14\6\1\73\1\74"+
    "\5\0\1\75\2\76\2\6\1\77\3\6\3\0\1\6"+
    "\1\100\4\6\1\101\10\6\1\0\1\102\3\0\1\103"+
    "\3\6\1\104\2\6\1\41\2\6\1\63\5\6\2\0"+
    "\1\105\1\0\1\6\1\106\3\6\1\107\1\6\1\65"+
    "\1\6\2\0\1\110\3\6\2\0\1\111\1\0\1\112"+
    "\1\113";

  private static int [] zzUnpackAction() {
    int [] result = new int[306];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\104\0\210\0\314\0\u0110\0\u0154\0\u0198\0\u01dc"+
    "\0\u0220\0\u0264\0\u02a8\0\u02ec\0\u0330\0\u0374\0\u03b8\0\u03fc"+
    "\0\u0440\0\u0484\0\u04c8\0\104\0\u050c\0\u0550\0\u0594\0\u05d8"+
    "\0\u061c\0\u0660\0\u06a4\0\u06e8\0\u072c\0\u0770\0\u07b4\0\u07f8"+
    "\0\u083c\0\u0880\0\u08c4\0\u0908\0\u094c\0\104\0\104\0\104"+
    "\0\104\0\104\0\u0990\0\u09d4\0\u0a18\0\u0a5c\0\u0aa0\0\104"+
    "\0\u0ae4\0\104\0\104\0\104\0\104\0\u0b28\0\104\0\u0b6c"+
    "\0\u0bb0\0\u0bf4\0\104\0\u0c38\0\u0c7c\0\104\0\u0cc0\0\u0d04"+
    "\0\u0d48\0\u01dc\0\u0d8c\0\u0dd0\0\104\0\104\0\u0e14\0\u0e58"+
    "\0\u0e9c\0\u0ee0\0\u0f24\0\u0f68\0\u0fac\0\u0ff0\0\104\0\u1034"+
    "\0\u1078\0\104\0\u0440\0\u10bc\0\u1100\0\u1144\0\u1188\0\u11cc"+
    "\0\u1210\0\u1254\0\u0198\0\u1298\0\u12dc\0\u1320\0\u1364\0\u13a8"+
    "\0\u13ec\0\u1430\0\u1474\0\u14b8\0\u14fc\0\u1540\0\u1584\0\u0198"+
    "\0\u15c8\0\u160c\0\u1650\0\u1694\0\u16d8\0\u171c\0\u1760\0\u17a4"+
    "\0\u17e8\0\u182c\0\u1870\0\u18b4\0\u18f8\0\u193c\0\u1980\0\104"+
    "\0\104\0\u19c4\0\104\0\104\0\104\0\104\0\u1a08\0\u1a4c"+
    "\0\u1a90\0\u1ad4\0\u1b18\0\u1b5c\0\u1ba0\0\104\0\104\0\u1be4"+
    "\0\u1c28\0\104\0\u1c6c\0\u1cb0\0\u1cf4\0\u1d38\0\u1d7c\0\u1dc0"+
    "\0\u1e04\0\u1e48\0\u1e8c\0\u0198\0\104\0\u1ed0\0\u1f14\0\u1f58"+
    "\0\u1f9c\0\u1fe0\0\u0198\0\u2024\0\u2068\0\u20ac\0\u20f0\0\u2134"+
    "\0\u2178\0\u21bc\0\u2200\0\u2244\0\u2288\0\u22cc\0\u2310\0\u2354"+
    "\0\u2398\0\u23dc\0\u2420\0\u2464\0\u24a8\0\u24ec\0\u2530\0\u2574"+
    "\0\u25b8\0\u0198\0\u25fc\0\u2640\0\u2684\0\104\0\u26c8\0\u270c"+
    "\0\u2750\0\u2794\0\104\0\u27d8\0\u281c\0\u2860\0\u28a4\0\u28e8"+
    "\0\u292c\0\u2970\0\u29b4\0\u29f8\0\u2a3c\0\u2a80\0\u0198\0\u2ac4"+
    "\0\u2b08\0\u2b4c\0\u2b90\0\u2bd4\0\u2c18\0\u2c5c\0\u2ca0\0\u2ce4"+
    "\0\u2d28\0\u0198\0\u2d6c\0\u2db0\0\u2df4\0\u0198\0\u2e38\0\u2e7c"+
    "\0\u2ec0\0\u2f04\0\u2f48\0\u2f8c\0\u2fd0\0\u3014\0\u3058\0\u309c"+
    "\0\u30e0\0\u3124\0\u0198\0\u0198\0\u3168\0\u31ac\0\u31f0\0\u3234"+
    "\0\u3278\0\104\0\u2860\0\u32bc\0\u3300\0\u3344\0\u0198\0\u3388"+
    "\0\u33cc\0\u3410\0\u3454\0\u3498\0\u34dc\0\u3520\0\u3564\0\u35a8"+
    "\0\u35ec\0\u3630\0\u3674\0\u0198\0\u36b8\0\u36fc\0\u3740\0\u3784"+
    "\0\u37c8\0\u380c\0\u3850\0\u3894\0\u38d8\0\104\0\u391c\0\u3960"+
    "\0\u39a4\0\u0198\0\u39e8\0\u3a2c\0\u3a70\0\104\0\u3ab4\0\u3af8"+
    "\0\u03b8\0\u3b3c\0\u3b80\0\u03b8\0\u3bc4\0\u3c08\0\u3c4c\0\u3c90"+
    "\0\u3cd4\0\u3d18\0\u3d5c\0\104\0\u3da0\0\u3de4\0\u0198\0\u3e28"+
    "\0\u3e6c\0\u3eb0\0\u0198\0\u3ef4\0\u03b8\0\u3f38\0\u3f7c\0\u3fc0"+
    "\0\104\0\u4004\0\u4048\0\u408c\0\u40d0\0\u4114\0\u0198\0\u4158"+
    "\0\104\0\104";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[306];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\2\1\4\1\5\1\2\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\2\2\1\15\1\16"+
    "\2\17\1\20\1\21\1\22\1\17\1\23\1\24\1\25"+
    "\1\26\1\27\1\17\1\7\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\17\1\7"+
    "\1\42\1\17\1\7\1\43\1\44\1\45\1\7\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66"+
    "\1\67\105\0\2\3\101\0\1\70\1\0\2\70\1\71"+
    "\1\70\1\72\75\70\1\5\1\0\3\5\1\73\1\74"+
    "\75\5\1\6\1\0\4\6\1\75\1\76\74\6\4\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\13\0\1\102\2\0\3\102\10\0\1\102\3\0\3\102"+
    "\1\0\13\102\1\0\2\102\1\0\5\102\34\0\1\103"+
    "\6\0\1\104\3\0\1\105\42\0\1\106\17\0\1\77"+
    "\3\0\1\7\1\100\1\0\1\7\1\107\1\110\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\2\7\1\111\1\17\13\7\1\17\1\7\1\112\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\113\1\17\2\0\3\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\1\114\2\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\12\7"+
    "\1\115\1\17\2\7\1\17\5\7\16\0\1\101\3\0"+
    "\1\116\1\0\16\116\1\117\63\116\3\0\1\120\15\0"+
    "\1\16\3\0\1\16\2\121\60\0\1\77\3\0\1\17"+
    "\2\0\3\17\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\2\17\2\0\30\17\16\0\1\101\24\0\1\104\2\0"+
    "\1\122\1\105\61\0\1\120\15\0\1\123\3\0\1\123"+
    "\2\121\60\0\1\77\3\0\1\7\1\100\1\0\2\7"+
    "\1\124\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\15\0\1\125\6\0\1\126\2\0"+
    "\1\125\1\127\62\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\1\7\1\130\1\7\1\17\7\7\1\131"+
    "\3\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\2\7\1\132\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\1\7\1\133\1\17\2\7"+
    "\1\134\2\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\4\7\1\135"+
    "\6\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\12\7\1\136\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\1\7\1\137\1\7\1\17\12\7\1\140\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\1\7\1\141\1\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\1\142\1\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\12\7\1\143\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\144\1\17\2\0\3\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\1\7\1\145\1\7\1\17"+
    "\4\7\1\146\2\7\1\147\3\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\1\7"+
    "\1\150\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\151\1\17\2\0\1\7\1\152\1\7"+
    "\1\17\7\7\1\153\3\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\1\7\1\154\1\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\1\7\1\155\1\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\3\7\1\156\7\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\1\157\2\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\2\7\1\160\1\17\2\7\1\161"+
    "\1\162\3\7\1\163\3\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\7\7\1\164\3\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\1\7\1\165\1\7"+
    "\1\17\13\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\7\7\1\166\3\7\1\17\2\7\1\17"+
    "\1\167\4\7\16\0\1\101\72\0\1\170\2\0\1\171"+
    "\101\0\1\172\1\0\1\173\103\0\1\174\103\0\1\175"+
    "\103\0\1\176\26\0\1\177\23\0\1\200\2\0\1\201"+
    "\1\202\1\203\1\0\1\204\6\0\1\205\126\0\1\206"+
    "\1\0\1\70\1\0\2\70\1\207\1\70\1\72\75\70"+
    "\1\71\1\0\102\71\1\70\1\0\102\70\1\5\1\0"+
    "\102\5\1\6\1\0\102\6\4\0\1\77\3\0\1\210"+
    "\2\0\3\210\4\0\2\210\2\0\2\210\2\0\30\210"+
    "\26\0\1\211\107\0\1\101\2\0\5\101\1\0\3\101"+
    "\1\0\3\101\2\0\30\101\16\0\1\101\15\0\1\212"+
    "\112\0\1\104\3\0\1\104\62\0\1\77\3\0\1\7"+
    "\1\100\1\0\2\7\1\213\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\4\7\1\214\3\7\1\215\2\7\1\17\2\7\1\17"+
    "\1\7\1\216\3\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\2\7\1\217\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\7\7\1\220\3\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\2\7\1\221\1\17\10\7\1\222\2\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\4\7\1\223\6\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\3\7\1\224\7\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\3\0\1\116\1\0\16\116"+
    "\1\225\63\116\21\0\1\120\3\0\1\120\2\121\66\0"+
    "\1\226\6\0\1\226\2\0\2\226\62\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\10\7"+
    "\1\227\2\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\24\0\1\126\3\0\1\127\61\0\1\230\15\0\1\126"+
    "\3\0\1\126\61\0\1\230\104\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\2\7\1\231\1\17\3\7"+
    "\1\232\7\7\1\17\2\7\1\17\4\7\1\224\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\2\7"+
    "\1\224\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\10\7\1\233\2\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\11\7\1\224\1\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\1\234"+
    "\2\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\7\7\1\235\3\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\1\236\1\7"+
    "\1\237\1\17\13\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\2\7"+
    "\1\240\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\1\241\2\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\7\7\1\157"+
    "\3\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\2\7"+
    "\1\242\1\17\13\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\17\3\7"+
    "\1\217\1\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\1\243\1\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\4\7\1\244\6\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\1\7\1\245\1\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\2\7\1\246\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\4\7"+
    "\1\247\6\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\6\7\1\250\4\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\1\7"+
    "\1\251\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\1\7\1\252\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\12\7\1\253\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\10\7\1\254\2\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\2\7\1\17\1\255\4\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\1\224\2\7"+
    "\1\17\13\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\4\7\1\256\6\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\1\7\1\257\1\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\1\7\1\260"+
    "\1\7\1\17\13\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\2\7"+
    "\1\261\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\1\7\1\242\3\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\2\7\1\262\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\4\7\1\263\6\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\3\7\1\264\7\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\265\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\73\0\1\266"+
    "\46\0\1\267\122\0\1\270\44\0\1\271\105\0\1\272"+
    "\146\0\1\273\36\0\1\274\123\0\1\275\60\0\1\210"+
    "\2\0\3\210\4\0\2\210\2\0\2\210\2\0\30\210"+
    "\26\0\1\276\103\0\1\77\3\0\1\7\1\277\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\300\1\17\2\0\3\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\301\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\7\7"+
    "\1\302\3\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\303\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\2\7"+
    "\1\304\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\4\7\1\305\6\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\1\306\2\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\4\7\1\307\6\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\24\0\1\226\3\0\1\226\62\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\1\7\1\310\1\17\5\7\16\0"+
    "\1\101\6\0\1\311\104\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\312\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\2\7\1\313"+
    "\10\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\1\7\1\314\1\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\2\7\1\315\10\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\2\7\1\316\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\317\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\7\7\1\320\3\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\3\7\1\321\7\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\322\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\323\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\1\7\1\323\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\1\7\1\324\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\3\7\1\325\7\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\10\7\1\326\2\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\3\7\1\327\7\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\1\7\1\330\1\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\17\1\331\4\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\3\7\1\332\7\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\1\333\2\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\334\1\17\2\0\3\7\1\17"+
    "\7\7\1\335\3\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\336\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\7\7\1\337\3\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\2\7\1\326\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\1\7\1\340\1\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\11\7\1\341\1\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\1\342\2\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\17\1\343\4\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\2\7"+
    "\1\344\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\35\0\1\345\105\0\1\346\64\0"+
    "\1\347\122\0\1\350\110\0\1\351\56\0\1\352\72\0"+
    "\2\353\3\0\6\353\1\0\1\353\1\0\1\353\1\0"+
    "\1\353\1\0\3\353\2\0\30\353\25\0\1\354\1\211"+
    "\3\0\6\354\1\0\1\354\1\0\1\354\1\0\1\354"+
    "\1\0\3\354\2\0\30\354\26\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\1\7\1\355\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\1\7\1\356\1\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\2\7\1\224\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\1\7\1\224\1\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\11\7\1\357\1\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\1\7\1\360\1\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\2\7\1\361"+
    "\10\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\362\5\7\16\0\1\101"+
    "\15\0\1\363\6\0\1\364\2\0\1\363\1\365\62\0"+
    "\1\77\3\0\1\17\2\0\3\17\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\2\17\2\0\4\17\1\366\23\17"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\1\367\4\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\1\7\1\317\1\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\5\7\1\326\5\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\370\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\4\7\1\371\6\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\3\7\1\314\7\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\1\7\1\372\1\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\373\13\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\374\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\3\7\1\375\7\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\376\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\1\377\2\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\u0100\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\7\7"+
    "\1\u0101\3\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\2\7\1\u0102\1\17\13\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\1\7\1\u0102\1\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\2\7\1\314\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\1\7\1\u0103\1\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\3\7\1\316\7\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\3\7"+
    "\1\227\7\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\1\u0104\2\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\243"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\31\0\1\u0105\103\0\1\u0106\115\0"+
    "\1\u0107\56\0\1\u0108\124\0\1\u0109\52\0\1\354\4\0"+
    "\6\354\1\0\1\354\1\0\1\354\1\0\1\354\1\0"+
    "\3\354\2\0\30\354\26\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\1\7"+
    "\1\u010a\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\1\7\1\u010b\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\2\7\1\u010c\10\7\1\17\2\7\1\17\5\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\326"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\17\2\0"+
    "\3\17\2\101\1\0\1\101\2\17\1\0\1\101\2\17"+
    "\2\0\13\17\1\u010d\14\17\16\0\1\101\24\0\1\364"+
    "\3\0\1\365\77\0\1\364\3\0\1\364\3\0\1\u010e"+
    "\103\0\1\u010e\56\0\1\77\3\0\1\17\2\0\3\17"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\2\17\2\0"+
    "\5\17\1\u010f\22\17\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\u0110\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\17\2\0\3\17\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\2\17\2\0\20\17\1\u0111\7\17\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\3\7\1\17\7\7\1\u0112\3\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\3\7\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\7\7\1\u0113"+
    "\3\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\17\2\0\3\17\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\2\17\2\0\12\17\1\u0114\15\17"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\131"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\1\7\1\326\1\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\4\7\1\u0115\6\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\1\7"+
    "\1\371\1\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\7"+
    "\1\100\1\0\2\7\1\u0116\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\u0117\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\7\1\100\1\0\3\7\2\101\1\0"+
    "\1\101\2\17\1\0\1\101\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\17\3\7\1\u0118\1\7"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\4\7\1\u0119\6\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\56\0\1\u011a\71\0"+
    "\1\u011b\103\0\1\u011c\55\0\1\u011d\74\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\2\7"+
    "\1\u011e\10\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\u011f\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\17\2\0\3\17\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\2\17\2\0\7\17"+
    "\1\u0120\20\17\16\0\1\101\7\0\1\77\3\0\1\17"+
    "\2\0\3\17\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\u0121\1\17\2\0\30\17\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\1\7\1\262\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\2\7\1\17\1\7\1\u0122"+
    "\3\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\2\7\1\u0110\2\101\1\0\1\101\2\17\1\0"+
    "\1\101\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\2\7\1\17\5\7\16\0\1\101\7\0\1\77\3\0"+
    "\1\7\1\100\1\0\3\7\2\101\1\0\1\101\2\17"+
    "\1\0\1\101\1\7\1\17\2\0\3\7\1\17\3\7"+
    "\1\u0123\7\7\1\17\2\7\1\17\5\7\16\0\1\101"+
    "\7\0\1\77\3\0\1\7\1\100\1\0\3\7\2\101"+
    "\1\0\1\101\2\17\1\0\1\101\1\7\1\17\2\0"+
    "\3\7\1\17\2\7\1\u0124\10\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\17\2\0"+
    "\3\17\2\101\1\0\1\101\2\17\1\0\1\101\2\17"+
    "\2\0\20\17\1\u0125\7\17\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\7\7\1\u0126\3\7\1\17\2\7\1\17\5\7\16\0"+
    "\1\101\7\0\1\77\3\0\1\7\1\100\1\0\3\7"+
    "\2\101\1\0\1\101\2\17\1\0\1\101\1\7\1\17"+
    "\2\0\1\7\1\u0100\1\7\1\17\13\7\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\37\0\1\u0127\114\0\1\u0128"+
    "\77\0\1\u0129\46\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\7"+
    "\1\17\2\0\3\7\1\17\12\7\1\u012a\1\17\2\7"+
    "\1\17\5\7\16\0\1\101\7\0\1\77\3\0\1\17"+
    "\2\0\3\17\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\2\17\2\0\23\17\1\u0111\4\17\16\0\1\101\7\0"+
    "\1\77\3\0\1\17\2\0\3\17\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\2\17\2\0\6\17\1\u012b\21\17"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\224"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\7\0\1\77\3\0\1\7\1\100"+
    "\1\0\3\7\2\101\1\0\1\101\2\17\1\0\1\101"+
    "\1\7\1\17\2\0\3\7\1\17\3\7\1\u0102\7\7"+
    "\1\17\2\7\1\17\5\7\16\0\1\101\7\0\1\77"+
    "\3\0\1\7\1\100\1\0\3\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\1\7\1\u012c\1\17\5\7\16\0\1\101"+
    "\36\0\1\u012d\120\0\1\u012e\37\0\1\77\3\0\1\7"+
    "\1\100\1\0\1\7\1\u0122\1\7\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\2\7\1\17\5\7\16\0\1\101\7\0"+
    "\1\77\3\0\1\17\2\0\3\17\2\101\1\0\1\101"+
    "\2\17\1\0\1\101\2\17\2\0\7\17\1\u0125\20\17"+
    "\16\0\1\101\7\0\1\77\3\0\1\7\1\100\1\0"+
    "\3\7\2\101\1\0\1\101\2\17\1\0\1\101\1\u012f"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\2\7\1\17"+
    "\5\7\16\0\1\101\43\0\1\u0130\60\0\1\u0131\114\0"+
    "\1\u0132\55\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[16796];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\21\1\1\11\21\1\5\11\5\1\1\11"+
    "\1\1\4\11\1\1\1\11\1\0\1\1\1\0\1\11"+
    "\2\0\1\11\2\0\4\1\2\11\7\1\1\0\1\11"+
    "\2\1\1\11\1\0\1\1\3\0\40\1\2\11\1\1"+
    "\4\11\7\0\2\11\1\1\1\0\1\11\12\1\1\11"+
    "\2\1\1\0\35\1\1\11\4\0\1\11\4\0\11\1"+
    "\1\0\33\1\5\0\1\11\10\1\3\0\17\1\1\0"+
    "\1\11\3\0\4\1\1\11\13\1\2\0\1\11\1\0"+
    "\11\1\2\0\1\11\3\1\2\0\1\1\1\0\2\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[306];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */
  public _WeaveLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _WeaveLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2282) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 40: 
          { return SHIFT_LEFT;
          }
        case 76: break;
        case 19: 
          { return LESS;
          }
        case 77: break;
        case 4: 
          { return DOUBLE_QUOTED_STRING;
          }
        case 78: break;
        case 26: 
          { return QUESTION;
          }
        case 79: break;
        case 29: 
          { return AND;
          }
        case 80: break;
        case 45: 
          { return EQUAL;
          }
        case 81: break;
        case 21: 
          { return ESCLAMATION;
          }
        case 82: break;
        case 53: 
          { return RULE_BINARY_CLOJURE_OPERATORS;
          }
        case 83: break;
        case 7: 
          { return COLON;
          }
        case 84: break;
        case 6: 
          { return ID;
          }
        case 85: break;
        case 65: 
          { return FALSE_LITERAL;
          }
        case 86: break;
        case 22: 
          { return EQ;
          }
        case 87: break;
        case 64: 
          { return RULE_MATCH_LITERAL;
          }
        case 88: break;
        case 50: 
          { return DOCUMENT_SEPARATOR;
          }
        case 89: break;
        case 43: 
          { return GREATER_EQUAL;
          }
        case 90: break;
        case 12: 
          { return L_BRACKET;
          }
        case 91: break;
        case 41: 
          { return LESS_EQUAL;
          }
        case 92: break;
        case 5: 
          { return SINGLE_QUOTED_STRING;
          }
        case 93: break;
        case 2: 
          { return com.intellij.psi.TokenType.WHITE_SPACE;
          }
        case 94: break;
        case 63: 
          { return USING;
          }
        case 95: break;
        case 17: 
          { return R_CURLY;
          }
        case 96: break;
        case 60: 
          { return WHEN;
          }
        case 97: break;
        case 35: 
          { return OR_OR;
          }
        case 98: break;
        case 15: 
          { return R_PARREN;
          }
        case 99: break;
        case 18: 
          { return COMMA;
          }
        case 100: break;
        case 72: 
          { return OUTPUT_DIRECTIVE_KEYWORD;
          }
        case 101: break;
        case 48: 
          { return RULE_ANY_REGEX;
          }
        case 102: break;
        case 69: 
          { return INPUT_DIRECTIVE_KEYWORD;
          }
        case 103: break;
        case 55: 
          { return SHIFT_RIGHT_LOGICAL;
          }
        case 104: break;
        case 36: 
          { return DOUBLE_LITERAL;
          }
        case 105: break;
        case 30: 
          { return XOR;
          }
        case 106: break;
        case 61: 
          { return VAR_DIRECTIVE_KEYWORD;
          }
        case 107: break;
        case 11: 
          { return PLUS;
          }
        case 108: break;
        case 34: 
          { return ARROW_TOKEN;
          }
        case 109: break;
        case 67: 
          { return UNLESS;
          }
        case 110: break;
        case 51: 
          { return RULE_UNARY_OPERATOS;
          }
        case 111: break;
        case 56: 
          { return VERSION_DIRECTIVE_KEYWORD;
          }
        case 112: break;
        case 33: 
          { return RULE_BINARY_OPERATORS;
          }
        case 113: break;
        case 52: 
          { return RULE_ANY_DATE;
          }
        case 114: break;
        case 28: 
          { return HASH;
          }
        case 115: break;
        case 39: 
          { return OR_KEYWORD;
          }
        case 116: break;
        case 14: 
          { return L_PARREN;
          }
        case 117: break;
        case 13: 
          { return R_BRACKET;
          }
        case 118: break;
        case 16: 
          { return L_CURLY;
          }
        case 119: break;
        case 71: 
          { return DEFAULT;
          }
        case 120: break;
        case 62: 
          { return NAMESPACE_URI;
          }
        case 121: break;
        case 27: 
          { return DOLLAR;
          }
        case 122: break;
        case 75: 
          { return NAMESPACE_DIRECTIVE_KEYWORD;
          }
        case 123: break;
        case 54: 
          { return AND_KEYWORD;
          }
        case 124: break;
        case 23: 
          { return MULTIPLY;
          }
        case 125: break;
        case 47: 
          { return AND_AND;
          }
        case 126: break;
        case 73: 
          { return OTHERWISE;
          }
        case 127: break;
        case 44: 
          { return NOT_EQUAL;
          }
        case 128: break;
        case 66: 
          { return TYPE_DIRECTIVE_KEYWORD;
          }
        case 129: break;
        case 31: 
          { return LINE_COMMENT;
          }
        case 130: break;
        case 70: 
          { return REPLACE;
          }
        case 131: break;
        case 9: 
          { return OR;
          }
        case 132: break;
        case 10: 
          { return INTEGER_LITERAL;
          }
        case 133: break;
        case 38: 
          { return IS;
          }
        case 134: break;
        case 32: 
          { return RULE_TYPE_ID;
          }
        case 135: break;
        case 58: 
          { return TRUE_LITERAL;
          }
        case 136: break;
        case 24: 
          { return MODULO;
          }
        case 137: break;
        case 49: 
          { return RULE_MIME_TYPE;
          }
        case 138: break;
        case 57: 
          { return RULE_NULL_LITERAL;
          }
        case 139: break;
        case 25: 
          { return AT;
          }
        case 140: break;
        case 46: 
          { return SIMILAR;
          }
        case 141: break;
        case 59: 
          { return WITH;
          }
        case 142: break;
        case 1: 
          { return com.intellij.psi.TokenType.BAD_CHARACTER;
          }
        case 143: break;
        case 74: 
          { return FUNCTION_DIRECTIVE_KEYWORD;
          }
        case 144: break;
        case 8: 
          { return MINUS;
          }
        case 145: break;
        case 68: 
          { return RULE_RANGE_LITERAL;
          }
        case 146: break;
        case 20: 
          { return GREATER;
          }
        case 147: break;
        case 37: 
          { return AS;
          }
        case 148: break;
        case 3: 
          { return DIVISION;
          }
        case 149: break;
        case 42: 
          { return SHIFT_RIGHT;
          }
        case 150: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
